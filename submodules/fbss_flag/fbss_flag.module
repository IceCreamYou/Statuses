<?php

/**
 * @file
 *   Integrates Flag with Statuses.
 */

/**
 * Implements hook_link().
 */
function fbss_flag_link($type, $status) {
  if ($type != 'statuses') {
    return;
  }
  $links = array();
  foreach (flag_get_flags('statuses') as $flag) {
    $links['flag-' . $flag->name] = array(
      'html' => TRUE,
      'title' => flag_create_link($flag->name, $status->sid),
    );
  }
  return $links;
}

/**
 * Implements hook_statuses_delete().
 */
function fbss_flag_statuses_delete($status) {
  foreach (flag_get_flags('statuses') as $flag) {
    db_delete('flag_content')
      ->condition('fid', $flag->fid)
      ->condition('content_id', $status->sid)
      ->execute();
    db_delete('flag_counts')
      ->condition('fid', $flag->fid)
      ->condition('content_id', $status->sid)
      ->execute();
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function fbss_flag_form_statuses_box_alter(&$form, $form_state) {
  // Make sure the necessary resources are loaded when the list of status updates is empty.
  // Otherwise, when the first status is posted, flagging an item will refresh the page.
  $path = drupal_get_path('module', 'flag') . '/theme';
  drupal_add_css($path . '/flag.css');
  drupal_add_js($path . '/flag.js');
}

/**
 * Implements hook_views_api().
 */
function fbss_flag_views_api() {
  return array(
    'api' => 2,
    'path' => drupal_get_path('module', 'fbss_flag') . '/views',
  );
}

/**
 * Implements hook_views_default_views_alter().
 */
function fbss_flag_views_default_views_alter(&$views) {
  // Add the "like" field to default Views.
  $flag = flag_get_flag('like');
  if (!$flag || !$flag->status) {
    return;
  }
  // This whole function only applies to default Views, not overridden ones.
  foreach ($views as $view) {
    if ($view->tag == 'Statuses') {
      // Set the view to show DISTINCT results on the primary key (sid).
      $view->display['default']->display_options['distinct'] = 1;
      // Add the "Flag: Statuses" relationship to expose the Flag link field.
      $view->display['default']->display_options['relationships']['flag_content_rel'] = array(
        'label' => 'flag',
        'required' => 0,
        'flag' => 'like',
        'user_scope' => 'any',
        'id' => 'flag_content_rel',
        'table' => 'statuses',
        'field' => 'flag_content_rel',
        'relationship' => 'none',
      );
      // Set up the "Flags: Flag link" field.
      $ops = array(
        'label' => '',
        'alter' => array(
          'alter_text' => 0,
          'text' => '',
          'make_link' => 0,
          'path' => '',
          'link_class' => '',
          'alt' => '',
          'prefix' => '',
          'suffix' => '',
          'target' => '',
          'help' => '',
          'trim' => 0,
          'max_length' => '',
          'word_boundary' => 1,
          'ellipsis' => 1,
          'html' => 0,
          'strip_tags' => 0,
        ),
        'empty' => '',
        'hide_empty' => 0,
        'empty_zero' => 0,
        'link_type' => '',
        'exclude' => 1,
        'id' => 'ops',
        'table' => 'flag_content',
        'field' => 'ops',
        'relationship' => 'flag_content_rel',
      );
      // Add the Flag link above the Global: Nothing field so we can use it as a token.
      $nothing = array_pop($view->display['default']->display_options['fields']);
      $view->display['default']->display_options['fields']['ops'] = $ops;
      $view->display['default']->display_options['fields']['nothing'] = $nothing;
      // Add the Flag link token to the Global: Nothing field.
      $t = $view->display['default']->display_options['fields']['nothing']['alter']['text'];
      $t = str_replace('[edit] [delete]', '[edit] [delete] [ops]', $t);
      $view->display['default']->display_options['fields']['nothing']['alter']['text'] = $t;
    }
  }
}

/**
 * Implements hook_flag_definitions().
 */
function fbss_flag_flag_definitions() {
  return array(
    'statuses' => array(
      'title' => 'Statuses',
      'description' => t('Statuses are short textual messages users use to express themselves.'),
      'handler' => 'fbss_flag',
    ),
  );
}

/**
 * Implements hook_flag_default_flags().
 */
function fbss_flag_flag_default_flags() {
  $flags = array();
  $flags['like'] = array(
    'content_type' => 'statuses',
    'title' => t('Like'),
    'global' => '0',
    'types' => array('page'),
    'flag_short' => t('Like'),
    'flag_long' => '',
    'flag_message' => '',
    'unflag_short' => t('Un-like'),
    'unflag_long' => '',
    'unflag_message' => '',
    'unflag_denied_text'  =>  '',
    'link_type' =>  'toggle',
    'roles' => array('flag' =>  array('2'), 'unflag'  =>  array('2')),
    'show_on_page' => FALSE,
    'show_on_teaser' => FALSE,
    'show_on_form' => FALSE,
    'status' => TRUE,
    'locked' => array('name'  =>  'name', 'global'  =>  'global', 'types' =>  'types', 'show_on_teaser' =>  'show_on_teaser', 'show_on_form'  =>  'show_on_form', 'status'  =>  'status'),
    'module'  =>  'fbss_flag',
    'api_version' =>  2,
  );
  $flags['follow'] = array(
    'content_type' => 'user',
    'title' => t('Follow'),
    'global' => '0',
    'types' => array('-'),
    'flag_short' => t('Follow'),
    'flag_long' => '',
    'flag_message' => t('Following'),
    'unflag_short' => t('Unfollow'),
    'unflag_long' => '',
    'unflag_message' => '',
    'unflag_denied_text'  =>  '',
    'link_type' =>  'toggle',
    'roles' => array('flag' =>  array('2'), 'unflag'  =>  array('2')),
    'show_on_profile' =>  'true',
    'access_uid'  =>  '',
    'show_on_page' => TRUE,
    'show_on_teaser' => FALSE,
    'show_on_form' => FALSE,
    'status' => TRUE,
    'locked' => array('name'  =>  'name', 'global'  =>  'global', 'types' =>  'types', 'show_on_teaser' =>  'show_on_teaser', 'show_on_form'  =>  'show_on_form', 'status'  =>  'status'),
    'module'  =>  'fbss_flag',
    'api_version' =>  2,
  );
  return $flags;
}

//This is here because the Flag module does not support magic include files.
module_load_include('inc', 'fbss_flag', 'fbss_flag.flag');
