<?php

/**
 * @file
 *   Install, update, and uninstall functions for the Statuses module.
 */

/**
 * Implements hook_schema().
 */
function statuses_schema() {
  $schema = array();
  $schema['statuses'] = array(
    'description' => 'Stores statuses.',
    'fields' => array(
      'sid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'description' => 'The Status ID.',
      ),
      'sender' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The User ID of the user who created the status message.',
      ),
      'recipient' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The ID of the entity that received the status message.',
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The stream context type.',
      ),
      'created' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The time the status message was saved.',
      ),
      'message' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => 'The status message.',
      ),
    ),
    'indexes' => array(
      'sender' => array('sender'),
      'recipient' => array('recipient'),
      'type' => array('type'),
      'created' => array('created'),
    ),
    'primary key' => array('sid'),
  );
  $schema['statuses_contexts'] = array(
    'description' => 'Stores stream context configurations.',
    'fields' => array(
      'type' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The stream context type.',
      ),
      'view' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The view used as the stream.',
      ),
      'selectors' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => 'Additional DOM selectors representing sections of the page that should be automatically refreshed via AJAX when a status is saved.',
      ),
      'visibility' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => -1,
        'size' => 'tiny',
        'description' => 'Flag to indicate how to apply contexts on pages. ' .
          '(-1 = Use module default settings, 0 = Show on all pages except listed pages, 1 = Show only on listed pages, 2 = Use custom PHP code to determine visibility, 3 = use a Context)',
      ),
      'pages' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => 'Contains either a list of paths on which to include/exclude the context or PHP code, depending on "visibility" setting.',
      ),
      'enabled' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
        'size' => 'tiny',
        'description' => 'Whether this context is active or not.',
      ),
    ),
    'primary key' => array('type'),
  );
  return $schema;
}

/**
 * Implements hook_install().
 *
 * When upgrading from facebook_status a normal update hook won't register
 * because we are installing the "statuses" module for the first time. To get
 * around this, we force the update hook to run during installation.
 */
function statuses_install() {
  $sandbox = array();
  $result = _statuses_update_7100($sandbox);
  if ($result) {
    drupal_set_message($result);
  }
}

/**
 * Implements hook_update_N().
 */
function _statuses_update_7100(&$sandbox) {
  if (db_table_exists('facebook_status')) {
    // Transfer data.
    // This might take a long time, but it should be manageable.
    // See https://drupal.org/node/1501978 for discussion of alternatives.
    db_query("
      INSERT INTO {statuses} (sid, sender, recipient, type, created, message)
      SELECT f.sid, f.sender, f.recipient, f.type, f.created, f.message
      FROM {facebook_status} f
      ORDER BY f.sid ASC
    ");
    db_query("
      INSERT INTO {statuses_contexts} (type, view, selectors, visibility, pages)
      SELECT f.type, f.view, f.selectors, f.visibility, f.pages
      FROM {facebook_status_contexts} f
      ORDER BY f.type ASC
    ");

    // Delete old tables.
    db_drop_table('facebook_status');
    db_drop_table('facebook_status_contexts');

    // Convert old settings.
    variable_set('statuses_default_text_other', variable_get('facebook_status_default_text_other', ''));
    variable_set('statuses_imagecache_preset', variable_get('facebook_status_imagecache_preset', ''));
    variable_set('statuses_user_other_view', variable_get('facebook_status_user_other_view', 'statuses_stream'));
    variable_set('statuses_default_text', variable_get('facebook_status_default_text', ''));
    variable_set('statuses_hide_length', variable_get('facebook_status_hide_length', 0));
    variable_set('statuses_block_view', variable_get('facebook_status_block_view', 1));
    variable_set('statuses_reply_type', variable_get('facebook_status_reply_type', 'at'));
    variable_set('statuses_share_view', variable_get('facebook_status_share_view', 'statuses_stream'));
    variable_set('statuses_box_rows', variable_get('facebook_status_box_rows', 2));
    variable_set('statuses_profile', variable_get('facebook_status_profile', 1));
    variable_set('statuses_refresh', variable_get('facebook_status_refresh', 0));
    variable_set('statuses_filter', variable_get('facebook_status_filter', 'none'));
    variable_set('statuses_length', variable_get('facebook_status_length', 140));
    variable_set('statuses_repost', variable_get('facebook_status_repost', 'Re: @name @message '));
    variable_set('statuses_enter', variable_get('facebook_status_enter', 0));
    variable_set('statuses_nl2br', variable_get('facebook_status_nl2br', 0));
    variable_set('statuses_ahah', variable_get('facebook_status_ahah', 1));
    variable_del('facebook_status_default_text_other');
    variable_del('facebook_status_imagecache_preset');
    variable_del('facebook_status_user_other_view');
    variable_del('facebook_status_default_text');
    variable_del('facebook_status_hide_length');
    variable_del('facebook_status_block_view');
    variable_del('facebook_status_reply_type');
    variable_del('facebook_status_share_view');
    variable_del('facebook_status_box_rows');
    variable_del('facebook_status_profile');
    variable_del('facebook_status_refresh');
    variable_del('facebook_status_filter');
    variable_del('facebook_status_length');
    variable_del('facebook_status_repost');
    variable_del('facebook_status_enter');
    variable_del('facebook_status_nl2br');
    variable_del('facebook_status_ahah');

    // Convert block position. This also fixes Tags blocks.
    db_update('block')
      ->expression('module', "REPLACE(module, 'facebook_status', 'statuses')")
      ->expression('delta', "REPLACE(delta, 'facebook_status', 'statuses')")
      ->condition('module', 'facebook_status%', 'LIKE')
      ->execute();
    db_update('block_role')
      ->expression('module', "REPLACE(module, 'facebook_status', 'statuses')")
      ->expression('delta', "REPLACE(delta, 'facebook_status', 'statuses')")
      ->condition('module', 'facebook_status%', 'LIKE')
      ->execute();

    return t('The Statuses module for Drupal 7 was upgraded from the Facebook-style Statuses module for Drupal 6.');
  }
}

/**
 * Add a column to mark a context as enabled or disabled.
 */
function statuses_update_7101() {
  // Note to self: D7 implementations of hook_update_N() use the docblock as
  // the description of an update so it should not be the usual
  // "Implements hook_update_N()."
  $new_field = array(
    'type' => 'int',
    'not null' => TRUE,
    'default' => 1,
    'size' => 'tiny',
    'description' => 'Whether this context is active or not.',
  );
  db_add_field('statuses_contexts', 'enabled', $new_field);
}

/**
 * Drop the 'weight' field from the contexts table.
 */
function statuses_update_7102() {
  db_drop_field('statuses_contexts', 'weight');
}

/**
 * Drop the 'context' field from the contexts table.
 */
function statuses_update_7103() {
  db_drop_field('statuses_contexts', 'context');
}

/**
 * Implements hook_uninstall().
 */
function statuses_uninstall() {
  variable_del('statuses_default_text_other');
  variable_del('statuses_imagecache_preset');
  variable_del('statuses_user_other_view');
  variable_del('statuses_default_text');
  variable_del('statuses_hide_length');
  variable_del('statuses_block_view');
  variable_del('statuses_reply_type');
  variable_del('statuses_share_view');
  variable_del('statuses_box_rows');
  variable_del('statuses_profile');
  variable_del('statuses_refresh');
  variable_del('statuses_filter');
  variable_del('statuses_length');
  variable_del('statuses_repost');
  variable_del('statuses_enter');
  variable_del('statuses_nl2br');
  variable_del('statuses_ahah');
}
